[tool.poetry]
name = "flake8-return"
version = "1.1.3"
description = "Flake8 plugin that checks return values"
authors = ["Afonasev Evgeniy <ea.afonasev@gmail.com>"]
license = "MIT"
readme = 'README.md'
repository = "https://github.com/afonasev/flake8-return"
homepage = "https://pypi.org/project/flake8-return"
keywords = ['flake8', 'plugin', 'return']

[tool.poetry.plugins."flake8.extension"]
R50 = 'flake8_return.plugin:ReturnPlugin'

[tool.poetry.dependencies]
python = "^3.6"
flake8-plugin-utils = "^1.0"

[tool.poetry.dev-dependencies]
black = {version = "^20.8b1",allow-prereleases = true}
bumpversion = "^0.6.0"
flake8-awesome = "^1.3"
mypy = "^0.971"
pylint = "^2.10"
pytest = "^6.2"
pytest-cov = "^3.0"
pytest-deadfixtures = "^2.2"
pytest-mock = "^3.6"
unify = "^0.5"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.coverage.run]
omit = ["tests/*", "flake8_return/plugin.py"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 80

[tool.isort]
balanced_wrapping = true
default_section = "THIRDPARTY"
include_trailing_comma = true
known_first_party = ["tests", "flake8_return"]
line_length = 79
multi_line_output = 3
skip = ["env"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
exclude = "env"

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pylint]
good-names = "i,j,k,e,x,_,pk,id"
max-args = "5"
max-attributes = "10"
max-bool-expr = "5"
max-branches = "10"
max-locals = "10"
max-module-lines = "300"
max-nested-blocks = "3"
max-public-methods = "10"
max-returns = "5"
max-statements = "25"
output-format = "colorized"
disable = '''
C0103, ; Constant name "api" doesn't conform to UPPER_CASE naming style (invalid-name)
C0111, ; Missing module docstring (missing-docstring)
C0330, ; Wrong hanging indentation before block (add 4 spaces)
E0213, ; Method should have "self" as first argument (no-self-argument) - N805 for flake8
R0201, ; Method could be a function (no-self-use)
R0901, ; Too many ancestors (m/n) (too-many-ancestors)
R0903, ; Too few public methods (m/n) (too-few-public-methods)'''
ignored-classes = """
contextlib.closing,"""

[tool.setuptools]
include-package-data = false
